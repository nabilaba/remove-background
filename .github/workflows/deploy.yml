name: ðŸš€ Deploy website on push

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Get latest code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.x

      - name: Cache Yarn
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install
        working-directory: frontend

      - name: Build Frontend
        run: yarn build
        working-directory: frontend

      - name: Upload Frontend Build Files
        uses: actions/upload-artifact@v4
        with:
          name: frontend-production-files
          path: ./frontend/dist
          include-hidden-files: true

    build-backend:
    name: Prepare Python Backend
    runs-on: ubuntu-latest

    steps:
      - name: Get latest code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create virtual environment
        run: python -m venv venv
        working-directory: backend

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: backend

      - name: Upload Backend Files
        uses: actions/upload-artifact@v4
        with:
          name: backend-production-files
          path: ./backend
          include-hidden-files: true

  deploy:
    name: Deploy Frontend and Backend
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-production-files
          path: ./dist

      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-production-files
          path: ./

      - name: Deploy all files to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          port: 21
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: ${{ secrets.FTP_SERVER_DIR }}
